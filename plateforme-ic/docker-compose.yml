version: "2"

services:
    ########## Serveur d'automatisation : JENKINS
    jenkins:
        #image: jenkins:latest
        build: jenkins/
        ports: 
            - "8092:8080"
            - "50000:50000"
        volumes:
            - ${ROOT_DATA}/jenkins_home:/var/jenkins_home
        networks:
            - ic_net
            
    ########## Repository de données
    nexus:
        image: sonatype/nexus3
        ports:
            - "8081:8081"
        volumes:
            - ${ROOT_SHARED_DATA}/nexus:/nexus-data
     
    ########## Qualité du code : SONARQUBE
    # La base de données est également utilisée pour XStudio
    db_sonar:
        image: mysql:5.7
        networks:
            - ic_net
        ports:
            - "3306:3306"
        volumes:
            - ${ROOT_SHARED_DATA}/mysql:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=@Soleil1
            - MYSQL_DATABASE=sonar
            - MYSQL_USER=sonar
            - MYSQL_PASSWORD=sonar
            
    sonarqube:
        image: sonarqube:alpine
        links:
            - db_sonar
        networks:
            - ic_net
        ports:
            - "9009:9000"
            - "9092:9092"
        environment:
            - SONARQUBE_JDBC_USERNAME=sonar
            - SONARQUBE_JDBC_PASSWORD=sonar
            - SONARQUBE_JDBC_URL=jdbc:mysql://db_sonar:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true
        volumes:
            - ${ROOT_SHARED_DATA}/sonarqube/conf:/opt/sonarqube/conf
            - ${ROOT_SHARED_DATA}/sonarqube/data:/opt/sonarqube/data
            - ${ROOT_SHARED_DATA}/sonarqube/extensions:/opt/sonarqube/extensions
            #- ${ROOT_SHARED_DATA}/sonarqube/plugins:/opt/sonarqube/lib/bundled-plugins

    ########## Version Control
    gitlab:
        image: gitlab/gitlab-ce:latest
        ports:
            - "1212:80"
            #- "443:443"
            #- "222:22"
        volumes:
            - ${ROOT_SHARED_DATA}/gitlab/etc:/etc/gitlab
            - ${ROOT_SHARED_DATA}/gitlab/data:/var/opt/gitlab
            - ${ROOT_SHARED_DATA}/gitlab/log:/var/log/gitlab
        networks:
            - ic_net
    
    
    ########## Outils collaboratifs : ROCKET.CHAT ou MATTERMOST
    #db_rocket:
    #    image: mongo:latest
    #    ports:
    #        - "27017:27017"
    #    volumes:
    #        - ${ROOT_DATA}/mongo:/data/db
    #    command: mongod --smallfiles
    
    #rocket:
    #    image: rocket.chat:latest
    #    links:
    #        - db_rocket
    #    ports:
    #        - "800:3000"
    #    volumes:
    #        - ${ROOT_SHARED_DATA}/rocket.chat/uploads:/app/uploads
    #    environment:
    #        - PORT=3000
    #        - MONGO_URL=mongodb://db_rocket:27017/rocketchat
    
    db_mattermost:
        image: postgres:alpine
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=mattermost
            - POSTGRES_PASSWORD=mattermost
        volumes:
            - ${ROOT_DATA}/postgres:/var/lib/postgresql/data
            - /etc/localtime:/etc/localtime:ro
        networks:
            - ic_net
    
    mattermost:
        build: mattermost/app
        links:
            - db_mattermost
        restart: unless-stopped
        volumes:
            - ${ROOT_SHARED_DATA}/mattermost/config:/mattermost/config:rw
            - ${ROOT_SHARED_DATA}/mattermost/data:/mattermost/data:rw
            - ${ROOT_SHARED_DATA}/mattermost/logs:/mattermost/logs:rw
            - /etc/localtime:/etc/localtime:ro
        environment:
            - MM_USERNAME=mattermost
            - MM_PASSWORD=mattermost
            - MM_DBNAME=mattermost
            - DB_HOST=db_mattermost
        ports:
            - "8065:8065"
        networks:
            - ic_net
    
    mattermost_web:
        build: mattermost/web
        links: 
            - mattermost
        ports:
            - "2424:80"
            - "443:443"
        restart: unless-stopped
        volumes:
            - ${ROOT_SHARED_DATA}/mattermost_web/cert:/cert:ro
            - /etc/localtime:/etc/localtime:ro
        networks:
            - ic_net
    
    ########## Gestion de tickets : MANTIS
    mantis:
        #image: chessmasterrr/mantis:latest
        build: mantis/
        links:
            - db_sonar
        networks:
            - ic_net
        environment:
            - MYSQL_ROOT_PASSWORD=@Soleil1
            - MYSQL_DATABASE=mantis
        ports:
            - "5000:80"
        volumes:
            - ${ROOT_SHARED_DATA}/mantis/main:/var/www/html/config
            - ${ROOT_SHARED_DATA}/mantis/plugins:/var/www/html/plugins

    ########## Gestion de tickets / Gestion de projet : TAIGA.IO
    #postgres:
    #    image: postgres:alpine
    #    environment:
    #        - POSTGRES_USER=taiga
    #        - POSTGRES_PASSWORD=taiga
    #    ports:
    #        - "5433:5432"
    #    volumes:
    #        - ${ROOT_DATA}/postgres_taiga:/var/lib/postgresql/data
    #        - /etc/localtime:/etc/localtime:ro
    #    networks:
    #        - ic_net
    #        
    #taiga:
    #    build: taiga/
    #    ports:
    #        - "5252:80"
    #    links:
    #        - postgres
    #    environment:
    #        - TAIGA_HOSTNAME=plateforme.ic.com
    #        - TAIGA_DB_HOST=postgres
    #        - TAIGA_DB_NAME=taiga
    #        - TAIGA_DB_USER=taiga
    #        - TAIGA_DB_PASSWORD=taiga
    #    volumes:
    #        - ${ROOT_DATA}/taiga/media:/usr/local/taiga/media
    #        - ${ROOT_DATA}/taiga/static:/usr/local/taiga/static
    #        - ${ROOT_DATA}/taiga/logs:/usr/local/taiga/logs
    #        - ${ROOT_DATA}/taiga/conf:/taiga
    #    networks:
    #        - ic_net
            
    ########## Tomcat pour déploiement application
    tomcat:
        build: ../container_tomcat_filebeat_xstudio/
        ports:
            - "9595:8080"
        networks:
            - ic_net
    
networks:
    ic_net:
        driver: bridge
